{"version":3,"sources":["TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","todoTextEdit","setTodoTextEdit","useEffect","a","axios","get","then","res","responseTodos","data","getAllTodos","handleSubmit","e","preventDefault","request","id","uuidv4","title","completed","post","response","HandleEdit","console","log","put","map","className","onSubmit","type","onChange","target","value","placeholder","updatedTodos","ToggleCompleted","checked","onClick","edit","delete","filter","handleDelete","App","exact","path","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01cedc6c.chunk.js","sourcesContent":["import React ,{useState,useEffect}from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./App.css\";\r\nimport './TodoList.css';\r\nimport axios from 'axios'\r\nfunction TodoList(){\r\n  const [todos,setTodos]=useState([]);\r\n  const [todo,setTodo]=useState('');\r\n  const [todoEditing,setTodoEditing]=useState(null);\r\n  const [todoTextEdit,setTodoTextEdit]=useState('');\r\n \r\n  \r\n  useEffect(() => {\r\n    // const temp=JSON.stringify(todos);\r\n    // localStorage.setItem('todos',temp)\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    const getAllTodos= async()=>{\r\n     await axios.get(`https://jsonplaceholder.typicode.com/todos`).then(res=>{\r\n     const responseTodos=res.data;\r\n     if(responseTodos) setTodos(responseTodos)\r\n   });\r\n    }\r\n    getAllTodos();\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   const temp= localStorage.getItem('todos');\r\n  //   const loadedTodos=JSON.parse(temp);\r\n  //   console.log(loadedTodos)\r\n  //   if(loadedTodos){\r\n  //     setTodos(loadedTodos)\r\n  //   }\r\n  // }, []);\r\n  \r\n  const handleSubmit = async (e)=> {\r\n    e.preventDefault();\r\n    const request={\r\n      id:uuidv4(),\r\n      title:todo,\r\n      completed:false\r\n    }\r\n    const response= await axios.post(\"https://jsonplaceholder.typicode.com/todos\", request);\r\n    setTodos([...todos,response.data]);\r\n    setTodo('')\r\n  }\r\n  function ToggleCompleted(id){\r\n    let updatedTodos=todos.map((todo)=>{\r\n      if(todo.id === id){\r\n        todo.completed=!todo.completed\r\n      }\r\n      return todo;\r\n    })\r\n    setTodos(updatedTodos)\r\n  }\r\n  function handleDelete(id){\r\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n    let updatedTodos= todos.filter( (todo)=> todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  }\r\n \r\n  const HandleEdit = async(e,todo,id) =>{\r\n    e.preventDefault()\r\n    console.log(todo);\r\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/todos/${todo.id}`,todo);\r\n    console.log(response);\r\n    setTodos(todos.map((todo)=>{\r\n      return (todo.id===id)? {...response.data}:todo;\r\n    }))\r\n    // let updatedTodos=todos.map((todo)=>{\r\n    //   if(todo.id === id){\r\n    //     todo.title=todoTextEdit\r\n    //   }\r\n    //    return todo;\r\n    // });\r\n   // setTodos(updatedTodos);\r\n    setTodoEditing(null)\r\n  }\r\n\r\n  function edit(todo){\r\n      setTodoEditing(todo.id);\r\n      setTodoTextEdit(todo.title)\r\n    }\r\n  return (\r\n    <div className='TodoList'>\r\n      <h1> Todo List! <span>A Simple React Todo List App.</span></h1>\r\n      <form className=\"NewTodoForm\"  onSubmit={handleSubmit}>\r\n        <input type=\"text\" onChange={(e)=>setTodo(e.target.value)} placeholder='New Todo' value={todo}/>\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n      {todos.map((todo)=> (\r\n        <div key={todo.id} id={todo.id} className=\"Todo\">\r\n            <div>\r\n          <input type=\"checkbox\" onChange={()=>ToggleCompleted(todo.id)} checked={todo.completed}/>\r\n          </div>\r\n          {todoEditing===todo.id ?(\r\n            <div>\r\n              <form className='Todo-edit-form'>\r\n              <input type=\"text\" onChange={(e)=>setTodoTextEdit(e.target.value)} value={todoTextEdit}/>\r\n              <button onClick={(e)=>HandleEdit(e,todo)}> Save Editing</button>\r\n              </form>\r\n            </div>\r\n          ):(\r\n            <div className=\"Todo-task\">\r\n                <ul>{todo.title}</ul>\r\n            </div>\r\n             )}\r\n          <div className='Todo-buttons'>\r\n          <button onClick={()=>edit(todo)}><i className='fas fa-pen' /></button>\r\n\r\n          <button onClick={()=> handleDelete(todo.id)}><i className='fas fa-trash' /></button>\r\n          </div>\r\n        </div>\r\n       ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport {BrowserRouter as Router, Switch ,Route } from \"react-router-dom\";\nfunction App() {\n  \n  return (\n   <div>\n    <Router>\n    <Switch>\n      <Route exact path=\"/\" children={<TodoList />}></Route>\n    </Switch>\n    </Router>\n   </div>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}